version: '3.9'

services:
  pyspark:
    container_name: pyspark
    build:
      context: ..
      dockerfile: ./docker/pyspark.Dockerfile
      args:
        - USER_NAME=spark
        - USER_ID=${USER_ID}
    volumes:
      - ../data-pipeline/pyspark/:/pyspark:rw
      - ~/.postgresql/root.crt:/home/spark/.postgresql/root.crt
    working_dir: /pyspark
    environment:
      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASS: ${MQTT_PASS}
      DB_URI: ${DB_URI}
      KAFKA_BOOTSTRAP_SERVER: ${KAFKA_BOOTSTRAP_SERVER}
    # depends_on:
    #   - mosquitto
    #   - kafka
    restart: unless-stopped

  # mosquitto:
  #   container_name: mosquitto
  #   image: eclipse-mosquitto
  #   volumes:
  #     - ../mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
  #     - ../mosquitto/passwd:/mosquitto/config/passwd
  #     - ../mosquitto/logs:/mosquitto/logs
  #   ports:
  #     - "1883:1883"
  #   restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8.1
    restart: unless-stopped
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      # KAFKA_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://127.0.0.1:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis
    command: redis-server --requirepass '${REDIS_PASSWORD}'
    ports:
      - "6379:6379"
